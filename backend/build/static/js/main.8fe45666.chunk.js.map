{"version":3,"sources":["services/blogs.js","reducers/notificationReducer.js","reducers/togglableReducer.js","reducers/blogFormReducer.js","reducers/blogsReducer.js","components/Blog.js","components/Blogs.js","components/Notification.js","components/Togglable.js","services/login.js","reducers/loginReducer.js","components/LoginForm.js","components/Login.js","components/Menu.js","components/BlogForm.js","components/CreateBlog.js","components/User.js","components/Users.js","services/users.js","reducers/usersReducer.js","App.js","store.js","index.js"],"names":["token","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","updateObject","put","id","setToken","newToken","resetToken","deleteBlog","delete","initialState","message","type","addNotification","msg","msgType","notificationReducer","state","action","toggleVisibility","togglableReducer","map","view","visibility","title","author","url","fieldChange","event","target","value","blogFormReducer","showNotification","dispatch","setTimeout","reducer","concat","filter","blog","Blog","useDispatch","Box","mb","Link","href","rel","likes","user","name","Button","variant","color","onClick","getState","blogs","blogToUpdate","find","likedBlog","blogService","updatedBlog","blogToDelete","window","confirm","to","Blogs","useSelector","match","useRouteMatch","params","path","mt","TableContainer","component","Paper","Table","TableBody","TableRow","key","TableCell","Notification","notification","Alert","severity","className","Togglable","props","visible","buttonLabel","cancelLabel","viewToggable","togglable","hideWhenVisible","display","showWhenVisible","useEffect","initializeView","toggle","style","children","displayName","login","credentials","username","password","fieldName","loginReducer","LoginForm","onSubmit","preventDefault","loginService","localStorage","setItem","JSON","stringify","TextField","label","onChange","required","Login","Menu","AppBar","position","Toolbar","removeItem","BlogForm","blogForm","blogObject","returnedBlog","createBlog","CreateBlog","User","Users","users","length","App","history","useHistory","loggedUserJSON","getItem","parse","initializeUser","userService","push","Container","combineReducers","blogsReducer","usersReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","Store","document","getElementById"],"mappings":"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","file":"static/js/main.8fe45666.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst resetToken = () => {\r\n  token = null\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (updateObject) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  const response = await axios.put(`${baseUrl}/${updateObject.id}`, updateObject, config)\r\n  return response.data\r\n}\r\n\r\nconst deleteBlog = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, create, update, setToken, resetToken, deleteBlog }","const initialState = { message: null, type: null }\r\n\r\nconst notificationReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n  case 'SHOW':\r\n    return { message:action.message, type: action.msgType }\r\n  case 'HIDE':\r\n    return initialState\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\n\r\nexport const addNotification = (msg, msgType) => {\r\n  return {\r\n    type: 'SHOW',\r\n    message: msg,\r\n    msgType\r\n  }\r\n}\r\n\r\nexport const removeNotification = () => {\r\n  return {\r\n    type: 'HIDE'\r\n  }\r\n}\r\n\r\nexport default notificationReducer\r\n\r\n","const initialState = []\r\n\r\nconst togglableReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n  case 'INIT_VIEW':\r\n    return [...state, action.data]\r\n  case 'TOGGLE':\r\n    return state.map(view => view.id !== action.data.id ? view : { ...view, visibility: !view.visibility })\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const toggleVisibility = id => {\r\n  return {\r\n    type: 'TOGGLE',\r\n    data: { id }\r\n  }\r\n}\r\n\r\nexport const initializeView = id => {\r\n  return {\r\n    type: 'INIT_VIEW',\r\n    data: {\r\n      id,\r\n      visibility: false\r\n    }\r\n  }\r\n}\r\n\r\nexport default togglableReducer\r\n\r\n","const initialState = { title: '', author: '', url:'' }\r\n\r\nconst blogFormReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n  case 'SET_TITLE':\r\n    return { ...state, title: action.data }\r\n  case 'SET_AUTHOR':\r\n    return { ...state, author: action.data }\r\n  case 'SET_URL':\r\n    return { ...state, url: action.data }\r\n  case 'RESET':\r\n    return initialState\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const fieldChange = event => {\r\n  const id = event.target.id\r\n  const value = event.target.value\r\n\r\n  switch (id) {\r\n  case 'fTitle':\r\n    return {\r\n      type: 'SET_TITLE',\r\n      data: value\r\n    }\r\n  case 'fAuthor':\r\n    return {\r\n      type: 'SET_AUTHOR',\r\n      data: value\r\n    }\r\n  case 'fUrl':\r\n    return {\r\n      type: 'SET_URL',\r\n      data: value\r\n    }\r\n  default:\r\n    return {\r\n      type: ''\r\n    }\r\n  }\r\n}\r\n\r\nexport const resetFields = () => {\r\n  return {\r\n    type: 'RESET'\r\n  }\r\n}\r\n\r\nexport default blogFormReducer\r\n\r\n","import blogService from '../services/blogs'\r\nimport { addNotification, removeNotification } from '../reducers/notificationReducer'\r\nimport { toggleVisibility } from '../reducers/togglableReducer'\r\nimport { resetFields } from '../reducers/blogFormReducer'\r\n\r\nconst showNotification = (message, type, dispatch) => {\r\n  dispatch(addNotification( message, type ))\r\n  setTimeout(() => {\r\n    dispatch(removeNotification())\r\n  }, 5000)\r\n}\r\n\r\nconst reducer = (state = [], action) => {\r\n  switch(action.type) {\r\n  case 'NEW_BLOG':\r\n    return state.concat(action.data)\r\n  case 'REMOVE_BLOG':\r\n    return state.filter(blog => blog.id !== action.data.id)\r\n  case 'LIKE':\r\n    return state.map(blog => blog.id !== action.data.id ? blog : action.data)\r\n  case 'INIT_BLOGS':\r\n    return action.data\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const createBlog = event => {\r\n  event.preventDefault()\r\n  return async (dispatch, getState) => {\r\n    const { blogForm } = getState()\r\n    const blogObject = {\r\n      title: blogForm.title,\r\n      author: blogForm.author,\r\n      url: blogForm.url\r\n    }\r\n    const returnedBlog = await blogService.create(blogObject)\r\n    dispatch({\r\n      type: 'NEW_BLOG',\r\n      data: returnedBlog\r\n    })\r\n    dispatch(resetFields())\r\n    dispatch(toggleVisibility('new blog'))\r\n    showNotification(`A new blog ${returnedBlog.title} by ${returnedBlog.author}`, 'success', dispatch)\r\n  }\r\n}\r\n\r\nexport const likeBlog = (id) => {\r\n  return async (dispatch, getState) => {\r\n    const { blogs } = getState()\r\n    const blogToUpdate = blogs.find((blog) => blog.id === id)\r\n    if(blogToUpdate) {\r\n      const likedBlog = {\r\n        ...blogToUpdate,\r\n        likes: blogToUpdate.likes + 1\r\n      }\r\n      const updatedBlog = await blogService.update(likedBlog)\r\n      dispatch({\r\n        type: 'LIKE',\r\n        data: updatedBlog\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const removeBlog = (id) => {\r\n  return async (dispatch, getState) => {\r\n    const { blogs } = getState()\r\n    const blogToDelete = blogs.find((blog) => blog.id === id)\r\n    if(window.confirm(`Remove blog ${blogToDelete.title} by ${blogToDelete.author}?`)) {\r\n      await blogService.deleteBlog(blogToDelete.id)\r\n      dispatch({\r\n        type: 'REMOVE_BLOG',\r\n        data: blogToDelete\r\n      })\r\n      showNotification(`Blog ${blogToDelete.title} was removed`, 'success', dispatch)\r\n    }\r\n  }\r\n}\r\n\r\nexport const initializeBlogs = () => {\r\n  return async dispatch => {\r\n    const blogs = await blogService.getAll()\r\n    dispatch({\r\n      type: 'INIT_BLOGS',\r\n      data: blogs\r\n    })\r\n  }\r\n}\r\n\r\nexport default reducer","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { removeBlog, likeBlog } from '../reducers/blogsReducer'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Box, Button, Link } from '@material-ui/core'\r\n\r\nconst Blog = ({ blog }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  if(!blog){\r\n    return (\r\n      <Redirect to='/'/>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Box>\r\n        Title:\r\n      </Box>\r\n      <Box mb={2}>\r\n        <strong>{blog.title} {blog.author}</strong>\r\n      </Box>\r\n      <Box>\r\n        Link:\r\n      </Box>\r\n      <Box mb={2}>\r\n        <Link href={blog.url} target=\"_blank\" rel=\"noopener\">{blog.url}</Link>\r\n      </Box>\r\n      <Box mb={2}>\r\n        Likes: <strong>{blog.likes}</strong>\r\n      </Box>\r\n      <Box>\r\n        User:\r\n      </Box>\r\n      <Box mb={2}>\r\n        <strong>{blog.user.name}</strong>\r\n      </Box>\r\n      <Box mb={2}>\r\n        <Button variant=\"contained\" color=\"primary\" id='likeBtn' onClick={() => dispatch(likeBlog(blog.id))}>like</Button><br/>\r\n      </Box>\r\n      <Box>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={() => {dispatch(removeBlog(blog.id)) }}>remove</Button>\r\n      </Box>\r\n    </Box>\r\n  )}\r\n\r\nexport default Blog\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Blog from '../components/Blog'\r\nimport { Switch, Route, useRouteMatch, Link } from 'react-router-dom'\r\nimport {\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Paper,\r\n} from '@material-ui/core'\r\n\r\nconst Blogs = () => {\r\n  const blogs = useSelector(state => state.blogs)\r\n\r\n  const match = useRouteMatch('/blogs/:id')\r\n  const blog = match? blogs.find(blog => blog.id === match.params.id) : null\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/blogs/:id\">\r\n        <Blog blog={blog}/>\r\n      </Route>\r\n      <Route>\r\n        <Box mt={2}>\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableBody>\r\n                {blogs.map(blog => (\r\n                  <TableRow key={blog.id}>\r\n                    <TableCell>\r\n                      <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Box>\r\n      </Route>\r\n    </Switch>\r\n  )}\r\n\r\nexport default Blogs\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\nconst Notification = () => {\r\n  const notification = useSelector(state => state.notification)\r\n  if (notification.message === null) {\r\n    return null\r\n  }\r\n\r\n  if(notification.type === 'error'){\r\n    return (\r\n      <Alert severity=\"error\">\r\n        {notification.message}\r\n      </Alert>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Alert className=\"success\">\r\n      {notification.message}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { toggleVisibility, initializeView } from '../reducers/togglableReducer'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst Togglable = (props) => {\r\n  const id = props.id\r\n  const buttonLabel = props.buttonLabel\r\n  const cancelLabel = props.cancelLabel\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  let visible\r\n  const toggableViews = useSelector(state => state.togglable)\r\n  const viewToggable = toggableViews.find(view => view.id === id)\r\n  if(viewToggable){\r\n    visible = viewToggable.visibility\r\n  }\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeView(id))\r\n  }, [dispatch, id])\r\n\r\n  const toggle = () => {\r\n    dispatch(toggleVisibility(id))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={toggle}>{buttonLabel}</Button>\r\n      </div>\r\n      <div style={showWhenVisible} className=\"togglableContent\">\r\n        {props.children}\r\n        <br/>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={toggle}>{cancelLabel ? cancelLabel : 'cancel'}</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nTogglable.displayName = 'Togglable'\r\n\r\nexport default Togglable","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import loginService from '../services/login'\r\nimport blogService from '../services/blogs'\r\nimport { addNotification, removeNotification } from '../reducers/notificationReducer'\r\n\r\nconst initialState = { username:'', password:'', user:null }\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n  case 'SET_USERNAME':\r\n    return { ...state, username: action.data }\r\n  case 'SET_PASSWORD':\r\n    return { ...state, password: action.data }\r\n  case 'SET_USER':\r\n    return { ...state, user: action.data }\r\n  case 'LOGIN':\r\n    return { username: '', password:'', user: action.data }\r\n  case 'LOGOUT':\r\n    return { username: '', password:'', user: null }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const initializeUser = () => {\r\n  const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n  if (loggedUserJSON) {\r\n    const user = JSON.parse(loggedUserJSON)\r\n    blogService.setToken(user.token)\r\n    return {\r\n      type: 'SET_USER',\r\n      data: user\r\n    }\r\n  }\r\n\r\n  return {\r\n    type:''\r\n  }\r\n}\r\n\r\nexport const login = event => {\r\n  event.preventDefault()\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const { login } = getState()\r\n      const username = login.username\r\n      const password = login.password\r\n      const user = await loginService.login({ username, password })\r\n\r\n      window.localStorage.setItem(\r\n        'loggedBlogappUser', JSON.stringify(user)\r\n      )\r\n\r\n      blogService.setToken(user.token)\r\n      dispatch({\r\n        type: 'LOGIN',\r\n        data: user\r\n      })\r\n    } catch (exception) {\r\n      dispatch(addNotification('wrong credentials', 'error'))\r\n      setTimeout(() => {\r\n        dispatch(removeNotification())\r\n      },5000)\r\n    }\r\n  }\r\n}\r\n\r\nexport const logOut = () => {\r\n  window.localStorage.removeItem('loggedBlogappUser')\r\n  blogService.resetToken()\r\n  return {\r\n    type: 'LOGOUT'\r\n  }\r\n}\r\n\r\nexport const fieldChange = event => {\r\n  const fieldName = event.target.name\r\n  const value = event.target.value\r\n  switch (fieldName) {\r\n  case 'Username':\r\n    return {\r\n      type: 'SET_USERNAME',\r\n      data: value\r\n    }\r\n  case 'Password':\r\n    return {\r\n      type: 'SET_PASSWORD',\r\n      data: value\r\n    }\r\n  default:\r\n    return {\r\n      type:''\r\n    }\r\n  }\r\n}\r\n\r\nexport default loginReducer","import React from 'react'\r\nimport { login } from '../reducers/loginReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fieldChange } from '../reducers/loginReducer'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const username = useSelector(state => state.login.username)\r\n  const password = useSelector(state => state.login.password)\r\n\r\n  return(\r\n    <form onSubmit={event => dispatch(login(event))}>\r\n      <div>\r\n        <TextField\r\n          id='username'\r\n          type=\"text\"\r\n          value={username}\r\n          name=\"Username\"\r\n          label=\"Username\"\r\n          onChange={event => dispatch(fieldChange(event))}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          id='password'\r\n          type=\"password\"\r\n          value={password}\r\n          name=\"Password\"\r\n          label=\"Password\"\r\n          onChange={event => dispatch(fieldChange(event))}\r\n          required\r\n        />\r\n      </div>\r\n      <br/>\r\n      <Button id='login-button' variant=\"contained\" color=\"primary\" type=\"submit\">login</Button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import React from 'react'\r\nimport Togglable from '../components/Togglable'\r\nimport LoginForm from '../components/LoginForm'\r\nimport Notification from '../components/Notification'\r\n\r\nconst Login = () => {\r\n  return (\r\n    <div>\r\n      <h1>blog app</h1>\r\n      <Notification/>\r\n      <Togglable id='login' buttonLabel='login'>\r\n        <LoginForm />\r\n      </Togglable>\r\n    </div>\r\n  )}\r\n\r\nexport default Login","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logOut } from '../reducers/loginReducer'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst Menu = () => {\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.login.user)\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <div>\r\n          <Button color=\"inherit\" component={Link} to='/'>\r\n            blogs\r\n          </Button>\r\n          <Button color=\"inherit\" component={Link} to='/users'>\r\n            users\r\n          </Button>\r\n          {user.name} logged in<Button color=\"inherit\" onClick={() => dispatch(logOut())}>logout</Button>\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )}\r\n\r\nexport default Menu","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createBlog } from '../reducers/blogsReducer'\r\nimport { fieldChange } from '../reducers/blogFormReducer'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst BlogForm = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const title = useSelector(state => state.blogForm.title)\r\n  const author = useSelector(state => state.blogForm.author)\r\n  const url = useSelector(state => state.blogForm.url)\r\n\r\n  return (\r\n    <div className=\"formDiv\">\r\n      <form onSubmit={event => dispatch(createBlog(event))}>\r\n        <TextField required id=\"fTitle\"\r\n          label=\"Title\"\r\n          value={title}\r\n          onChange={event => dispatch(fieldChange(event))}\r\n        /><br/>\r\n        <TextField required id=\"fAuthor\"\r\n          label=\"Author\"\r\n          value={author}\r\n          onChange={event => dispatch(fieldChange(event))}\r\n        /><br/>\r\n        <TextField required id=\"fUrl\"\r\n          label=\"Url\"\r\n          value={url}\r\n          onChange={event => dispatch(fieldChange(event))}\r\n        /><br/>\r\n        <br/>\r\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">create</Button>\r\n        <br/>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogForm","import React from 'react'\r\nimport Togglable from '../components/Togglable'\r\nimport BlogForm from '../components/BlogForm'\r\nimport { Box } from '@material-ui/core'\r\n\r\nconst CreateBlog = () => {\r\n  return(\r\n    <Box mb={2}>\r\n      <Togglable id='new blog' buttonLabel='new blog'>\r\n        <BlogForm />\r\n      </Togglable>\r\n    </Box>\r\n  )}\r\n\r\nexport default CreateBlog\r\n","import React from 'react'\r\n\r\nconst User = ({ user }) => {\r\n  if (!user) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>{user.name}</h1>\r\n      <h2>added blogs</h2>\r\n      <ul>\r\n        {user.blogs.map(blog =>\r\n          <li key={blog.title}>{blog.title}</li>)}\r\n      </ul>\r\n    </div>\r\n  )}\r\n\r\nexport default User\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport User from '../components/User'\r\nimport {\r\n  Switch, Route, useRouteMatch, Link\r\n} from 'react-router-dom'\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Paper,\r\n} from '@material-ui/core'\r\n\r\nconst Users = () => {\r\n  const users = useSelector(state => state.users)\r\n\r\n  const match = useRouteMatch('/users/:id')\r\n  const user = match? users.find(user => user.id === match.params.id) : null\r\n\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route path=\"/users/:id\">\r\n          <User user={user} />\r\n        </Route>\r\n        <Route>\r\n          <h1>Users</h1>\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell></TableCell>\r\n                  <TableCell><strong>blogs created</strong></TableCell>\r\n                </TableRow>\r\n                {users.map(user =>\r\n                  <TableRow key={user.id}>\r\n                    <TableCell><Link to={`/users/${user.id}`}>{user.name}</Link></TableCell>\r\n                    <TableCell>{user.blogs.length}</TableCell>\r\n                  </TableRow>)}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  )}\r\n\r\nexport default Users\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll }","import userService from '../services/users'\r\n\r\nconst reducer = (state = [], action) => {\r\n  switch(action.type) {\r\n  case 'INIT_USERS':\r\n    return action.data\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const initializeUsers = () => {\r\n  return async dispatch => {\r\n    const users = await userService.getAll()\r\n    dispatch({\r\n      type: 'INIT_USERS',\r\n      data: users\r\n    })\r\n  }\r\n}\r\n\r\nexport default reducer","import React, { useEffect } from 'react'\r\nimport Blogs from './components/Blogs'\r\nimport Notification from './components/Notification'\r\nimport Login from './components/Login'\r\nimport Menu from './components/Menu'\r\nimport CreateBlog from './components/CreateBlog'\r\nimport Users from './components/Users'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { initializeBlogs } from './reducers/blogsReducer'\r\nimport { initializeUser } from './reducers/loginReducer'\r\nimport { initializeUsers } from './reducers/usersReducer'\r\nimport {\r\n  Switch, Route, useHistory\r\n} from 'react-router-dom'\r\nimport Container from '@material-ui/core/Container'\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.login.user)\r\n  const blogs = useSelector(state => state.blogs)\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeUser())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    if(user && blogs.length === 0) {\r\n      dispatch(initializeBlogs())\r\n      dispatch(initializeUsers())\r\n      history.push('/')\r\n    }\r\n  }, [user, blogs.length, history, dispatch])\r\n\r\n  return (\r\n    <Container>\r\n      <div>\r\n        {user === null ?\r\n          <Login/> :\r\n          <div>\r\n            <Menu/>\r\n            <Notification/>\r\n            <h1>blog app</h1>\r\n            <Switch>\r\n              <Route path='/users'>\r\n                <Users/>\r\n              </Route>\r\n              <Route path='/'>\r\n                <CreateBlog/>\r\n                <Blogs/>\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        }\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App","import { createStore, combineReducers, applyMiddleware  } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport blogsReducer from './reducers/blogsReducer'\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport loginReducer from './reducers/loginReducer'\r\nimport togglableReducer from './reducers/togglableReducer'\r\nimport blogFormReducer from './reducers/blogFormReducer'\r\nimport usersReducer from './reducers/usersReducer'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst reducer = combineReducers({\r\n  blogs: blogsReducer,\r\n  notification: notificationReducer,\r\n  togglable: togglableReducer,\r\n  blogForm: blogFormReducer,\r\n  login:loginReducer,\r\n  users: usersReducer\r\n})\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport Store from './store'\r\nimport { Provider } from 'react-redux'\r\nimport './App.css'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <Provider store={Store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}